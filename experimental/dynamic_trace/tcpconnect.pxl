# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

import px
import pxtrace

# Adapted from https://github.com/iovisor/bpftrace/blob/master/tools/tcpconnect.bt
program = """
#include <linux/socket.h>
#include <net/sock.h>

kprobe:tcp_connect
{
  $sk = ((struct sock *) arg0);
  $inet_family = $sk->__sk_common.skc_family;

  $AF_INET = (uint16) 2;
  $AF_INET6 = (uint16) 10;

  if ($inet_family == $AF_INET || $inet_family == $AF_INET6) {
    if ($inet_family == $AF_INET) {
      $daddr = ntop($sk->__sk_common.skc_daddr);
      $saddr = ntop($sk->__sk_common.skc_rcv_saddr);
    } else {
      $daddr = ntop($sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);
      $saddr = ntop($sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);
    }
    $sport = $sk->__sk_common.skc_num;
    $dport = $sk->__sk_common.skc_dport;

    // Destination port is big endian, it must be flipped
    $dport = ($dport >> 8) | (($dport << 8) & 0x00FF00);
    @map[tid] = $dport;

    $pid_start_time = ((struct task_struct*)curtask)->group_leader->start_time / 10000000;
    // Need this to prevent $pid_start_time becomes 0 in the below printf() statement.
    @map[tid] = $pid_start_time;

    printf("time_:%llu pid:%d pid_start_time:%llu command:%s local_port:%d remote_ip:%s remote_port:%d",
           nsecs, pid, $pid_start_time, comm, $sport, $saddr, $dport);
  }
}
"""
name = 'tcpconnect'
pxtrace.UpsertTracepoint(name,
                         name,
                         program,
                         pxtrace.kprobe(),
                         ttl='5m')
df = px.DataFrame(name)
px.display(df)
